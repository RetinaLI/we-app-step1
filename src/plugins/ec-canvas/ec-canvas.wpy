<template>
  <view wx:if="{{showCanvas}}">
    <canvas class="ec-canvas {{className}}" canvas-id="{{canvasId}}" style="display:block;">
    </canvas>
  </view>
</template>

<script>
import wepy from 'wepy';
import WxCanvas from '../ec-canvas/wx-canvas';
import * as echarts from '../ec-canvas/echarts';

let uuid = 1;

export default class EcCanvas extends wepy.component {
  data = {
    showCanvas: false,
    canvasId: '',
    className: 'ec-'
  }

  props = {
    ec: Object,
    key: String
  }

  events = {
    render: (key, callback) => {
      if (!key || !this.key || key !== this.key) return;
      this.init(callback);
    },
    'destroy-echarts': () => {
      this.chart = null;
      this.canvasId = 'aaa' + Date.now() + (++uuid);
      this.className = 'ec-' + Date.now() + (++uuid);
      this.showCanvas = false;
      this.$apply();
    }
  }

  methods = {
  }

  init (callback) {
    this.canvasId = 'aaa' + Date.now() + (++uuid);
    this.className = 'ec-' + Date.now() + (++uuid);
    this.showCanvas = true;
    this.$apply();
    const version = wx.version.version.split('.').map(n => parseInt(n, 10));
    const isValid = version[0] > 1 || (version[0] === 1 && version[1] >= 9) || (version[0] === 1 && version[1] === 9 && version[2] >= 91);
    if (!isValid) {
      console.error(`微信基础库版本过低，需大于等于 1.9.91。
          参见：https://github.com/ecomfe/echarts-for-weixin
          #%E5%BE%AE%E4%BF%A1%E7%89%88%E6%9C%AC%E8%A6%81%E6%B1%82`);
      return;
    }

    const ctx = wx.createCanvasContext(this.canvasId, this);
    const canvas = new WxCanvas(ctx);

    echarts.setCanvasCreator(() => {
      return canvas;
    });
    let query = wx.createSelectorQuery();
    query.select(`.${this.className}`).boundingClientRect(res => {
      if (typeof callback === 'function') {
        this.chart = callback(canvas, res.width, res.height);
      } else if (this.ec && this.ec.onInit) {
        this.chart = this.ec.onInit(canvas, res.width, res.height);
      } else {
        this.$emit('ready', canvas, res.width, res.height, (chart) => {
          this.chart = chart;
        });
      }
    }).exec();
  }

  onLoad () {
    this.showCanvas = false;
    this.$apply();
    if (this.ec && this.ec.lazyLoad) {
    } else {
      this.init();
    }
  }
}
</script>

<style lang="css">
.ec-canvas {
  width: 100%;
  height: 100%;
  display: block;
}
</style>
