<style lang="less">
  .function () {
    .rpx (@x) {
      return: @x * 2rpx;
    }
  }

  .trip {
    .operations {
      padding: rpx(10) 0;
    }
    .year-top-btn {
      padding-top: rpx(10);
      justify-content: space-between;
      align-items: center;
      .year-btn {
        width: rpx(86);
        height: rpx(40);
        border-radius: rpx(5);
        background: #f4f4f4;
        line-height: rpx(40);
        text-align: center;
      }
      .year-text {
        font-weight: 600;
        font-size: rpx(20);
        color: #333;
      }
    }
    .year-list {
      position: relative;
      z-index: 1;
      .line {
        position: absolute;
        left: rpx(24);
        width: 2px;
        background: #ECF1FE;
        z-index: -1;
      }
      .year-list-item {
        align-items: center;
        height: rpx(70);
        &:nth-last-child(1) {
          .year-list-item-content {
            border-bottom: none;
          }
        }
        .year-list-item-month {
          display: flex;
          justify-content: center;
          align-items: center;
          width: rpx(48);
          height: rpx(48);
          border-radius: 50%;
          background: #ECF1FE;
          color: #4475FD;
          font-size: rpx(20);
          font-weight: 600;
          margin-right: rpx(8);
          .month-num {
          }
          .month {
            padding-top: rpx(7);
            font-weight: normal;
            font-size: rpx(10);
          }
        }
        .year-list-item-content {
          flex: 1;
          height: 100%;
          border-bottom: 1px solid #eee;
          .just-right {
            justify-content: flex-end;
          }
          .year-list-item-content-left {
            flex: 1;
            .col-3 {
              flex: 0 0 33.3%;
              align-items: center;
              box-sizing: border-box;
              padding-right: rpx(5);
            }
          }
          .year-icon {
            margin-right: rpx(10);
          }
          .year-icon-01 {
            width: rpx(20);
            height: rpx(19);
          }
          .year-icon-02 {
            width: rpx(15);
            height: rpx(22);
          }
          .year-icon-03 {
            width: rpx(16);
            height: rpx(20);
          }
          .year-icon-text {
            text {
              display: block;
            }
            text:nth-of-type(1) {
              line-height: rpx(18);
              color: #333;
              font-weight: 600;
              font-size: rpx(13);
            }
            text:nth-of-type(2) {
              line-height: rpx(17);
              color: #999;
              font-size: rpx(12);
            }
          }
        }
      }
    }
  }
  .no-data {
    font-size: rpx(14);
    color: #999;
    height: 60px;
    line-height: 60px;
    text-align: center;
  }
</style>
<template>
  <view class="trip">
    <view class="part m-top-10">
      <text class="part-title">运营概况</text>
      <view class="operations">
        <operationSituation :operations.sync="operations"/>
      </view>
    </view>
    <view class="part">
      <text class="part-title">行程统计</text>
      <view class="year-top-btn flex">
        <span class="year-btn" @tap="prevYear"><i
          class="foton-ui arr-icon left {{year === currentYear && 'opacity2'}}"></i></span>
        <text class="year-text">{{currentYear}}年</text>
        <span class="year-btn" @tap="nextYear"><i class="foton-ui arr-icon right {{currentYear === createdYear && 'opacity2'}}"></i></span>
      </view>
      <view class="no-data" wx:if="{{monthes.length <= 0}}">
        <text>暂无数据</text>
      </view>
      <view class="year-list" wx:if="{{monthes.length > 0}}">
        <text class="line" wx:if="{{monthes.length > 1}}"
              style="height:{{monthes.length * 140 - 100}}rpx; top: 50rpx"></text>
        <repeat for="{{monthes}}" key="index" index="index" item="item">
          <view class="year-list-item flex" @tap="navigatorToMonth({{item}})">
            <view class="year-list-item-month">
              <text class="month-num">{{item.month}}</text>
              <text class="month">月</text>
            </view>
            <view class="year-list-item-content flex">
              <view class="year-list-item-content-left flex">
                <view class="col-3 flex">
                  <image class="year-icon year-icon-01"
                         src="../../assets/trip/statistics-01.png"></image>
                  <view class="year-icon-text">
                    <text>{{item.workDays || 0}}天</text>
                    <text>在线</text>
                  </view>
                </view>
                <view class="col-3 flex">
                  <image class="year-icon year-icon-02"
                         src="../../assets/trip/statistics-02.png"></image>
                  <view class="year-icon-text">
                    <text>{{item.mileage || 0}}km</text>
                    <text>里程</text>
                  </view>
                </view>
                <view class="col-3 flex">
                  <image class="year-icon year-icon-03"
                         src="../../assets/trip/statistics-03.png"></image>
                  <view class="year-icon-text">
                    <text>{{item.fuelConsumption || 0}}L</text>
                    <text>油耗</text>
                  </view>
                </view>
              </view>
              <text class="foton-ui arr-icon right opacity2 just-right"></text>
            </view>
          </view>
        </repeat>
      </view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import OperationSituation from '../../components/trip/operation-situation';
  import tripService from '../../services/trip';
  import numToFixed from '../../lib/numToFixed';

  export default class TripIndex extends wepy.component {

    data = {
      operations: [
        {
          img: '../../assets/trip/oper-icon-01.png',
          title: '累计里程',
          val: 0,
          unit: 'km',
        },
        {
          img: '../../assets/trip/oper-icon-02.png',
          title: '累计时长',
          val: 0,
          unit: 'h',
        },
        {
          img: '../../assets/trip/oper-icon-03.png',
          title: '累计行驶',
          val: 0,
          unit: '天',
        },
        {
          img: '../../assets/trip/oper-icon-04.png',
          title: '监控天数',
          val: 0,
          unit: '天',
        },
        {
          img: '../../assets/trip/oper-icon-05.png',
          title: '平均速度',
          val: 0,
          unit: 'km/h',
        },
        {
          img: '../../assets/trip/oper-icon-06.png',
          title: '利用率',
          val: 0,
          unit: '%',
        },
      ],
      monthes: [],
      carId: '',
      year: new Date().getFullYear(),
      createdYear: 0,
      currentYear: new Date().getFullYear(),
      framenum: ''
    };

    methods = {
      navigatorToMonth (item) {
        if (this.carId) {
          wepy.navigateTo({
            url: `./trip/trip-month?y=${item.dataTime}&carId=${this.carId}&runDays=${item.runDays}&mileage=${item.mileage}&fuelConsumption=${item.fuelConsumption}&workTimeInSeconds=${item.workTimeInSeconds}&avgVelocity=${item.avgVelocity}&workDays=${item.workDays}&framenum=${this.framenum}`
          });
        } else {
          return false;
        }
      },
      prevYear() {
        if (this.currentYear < this.year) {
          this.currentYear++;
          this.getData(this.carId, this.currentYear);
          this.$apply();
        } else {
          return false;
        }
      },
      nextYear() {
        if (this.currentYear <= this.year && this.currentYear > this.createdYear) {
          this.currentYear--;
          this.getData(this.carId, this.currentYear);
          this.$apply();
        } else {
          return false;
        }
      }
    };

    onLoad(option) {
    };

    events = {
      'getTripIndex': async (carId) => {
        if (this.carId === carId) return;
        this.carId = carId;
        wepy.showLoading({
          title: '加载中...'
        });
        let data = await tripService.getTripIndex({
          carId
        });
        this.operations[0].val = data.map.TT_MILEAGE || 0;
        this.operations[1].val = data.map.TT_WORK_TIME || 0;
        this.operations[2].val = data.map.TT_WORK_DAYS || 0;
        this.operations[4].val = data.map.TT_AVG_VELOCITY || 0;
        this.operations[5].val = data.map.TT_WORK_PERCENT || 0;
        this.getData(this.carId, this.year);
        this.getCreated(this.carId);
        wepy.hideLoading();
        this.$apply();
      }
    };

    async getCreated(carId) {
      let data = await tripService.getTripIndexCreated({
        carId
      });
      if (data.code === 200 && data.data.created) {
        this.framenum = data.data.framenum;
        this.createdYear = new Date(data.data.created).getFullYear();
        this.operations[3].val = parseInt(Math.abs(new Date(data.data.created) - new Date()) / 1000 / 60 / 60 / 24);
        this.$apply();
      }
    };

    async getData(carId, year) {
      let data = await tripService.getTripIndexList({
        carId,
        year
      });
      if (data.code === 200) {
        this.monthes = data.monthlyList.reverse().map(ele => {
          let date = ele.dataTime.split(' ')[0];
          return Object.assign(ele, {
            mileage: numToFixed(ele.mileage / 1000),
            dataTime: date,
            workTimeInSeconds: numToFixed(ele.workTimeInSeconds / 60 / 60), // 转小时
            avgVelocity: numToFixed(ele.avgVelocity),
            year: date.split('-')[0],
            month: date.split('-')[1]
          });
        });
        this.$apply();
      }
    };

    components = {
      operationSituation: OperationSituation,
    };
  }
</script>
