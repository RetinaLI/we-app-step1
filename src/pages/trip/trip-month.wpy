<style lang="less">
  @import "../../style/global.less";
  .function () {
    .rpx (@x) {
      return: @x * 2rpx;
    }
  }

  .trip-month-part {
    padding-bottom: rpx(10);
  }

  .trip-month {
    padding: 0 rpx(8);
    .operations {
      padding: rpx(10) 0;
    }
    .part-main {
      flex-direction: column;
    }
    .title {
      color: #333;
      font-size: rpx(14);
      text-align: center;
      text {
        color: @normal;
      }
    }
    .mapchart {
      width: 100%;
      height: rpx(240);
    }
    .cities {
      width: 100%;
      & > .city {
        width: 33%;
        margin-bottom: rpx(5);
        float: left;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
        .num {
          display: inline-block;
          width: rpx(28);
          height: rpx(17);
          line-height: rpx(17);
          text-align: center;
          color: #c1c1c1;
          font-size: rpx(13);
          background-color: #f2f2f2;
          border-radius: rpx(10);
          &.firstline {
            color: @normal;
            background-color: rgba(68, 117, 253, 0.1);
          }
        }
        .name {
          margin-left: rpx(10);
          color: #333;
          font-size: rpx(14);
        }
      }
    }
    .month {
      margin-top: rpx(10);
      padding: rpx(9) rpx(9) rpx(4);
      border-radius: rpx(10);
      background: #f8f8f8;
    }
    .headbox {
      margin-bottom: rpx(16);
      .headdate {
        flex: 0 0 14.2%;
        text-align: center;
        color: #999;
        font-size: rpx(11);
      }
    }
    .days {
      flex-wrap: wrap;
      .day {
        position: relative;
        flex: 0 0 14.2%;
        text-align: center;
        margin-bottom: rpx(10);
        color: #333;
        font-size: rpx(14);
        line-height: rpx(20);
        &.run {
          &:before {
            content: '';
            position: absolute;
            left: 50%;
            bottom: rpx(-5);
            width: rpx(5);
            height: rpx(5);
            background: #4475FD;
            border-radius: 50%;
            transform: translateX(-50%);
          }
        }
      }
    }
  }
</style>
<template>
  <view class="trip-month">
    <view class="part m-top-10">
      <text class="part-title">运营概况</text>
      <view class="operations">
        <operationSituation :operations.sync="operations"/>
      </view>
    </view>
    <view class="part">
      <text class="part-title">车辆足迹</text>
      <view class="part-main">
        <view class="title">车辆经过<text>{{beenPlace.province}}</text>个省份、<text>{{beenPlace.cities}}</text>个城市</view>
        <!--<view class="title">超过<text>{{beenPlace.raty}}%</text>的车辆</view>-->
        <map-chart class="mapchart" @ready.user="onChartMapReady"></map-chart>
        <view class="cities clearfix">
          <repeat for="{{citiesOrder}}" key="index" index="index" item="item">
            <view class="city">
              <text class="num {{index < 3 ? 'firstline' : ''}}">
                <text wx:if="{{index < 9}}">0</text>
                <text>{{(index + 1) + '.'}}</text>
              </text>
              <text class="name">{{item.city}}</text>
            </view>
          </repeat>
        </view>
      </view>
    </view>
    <view class="part trip-month-part">
      <text class="part-title">运营日历</text>
      <view class="month">
        <view class="headbox flex">
          <view class="headdate">日</view>
          <view class="headdate">一</view>
          <view class="headdate">二</view>
          <view class="headdate">三</view>
          <view class="headdate">四</view>
          <view class="headdate">五</view>
          <view class="headdate">六</view>
        </view>
        <view class="days flex">
          <repeat for="{{days + monthStartDate}}" key="index" index="index"
                  item="date">
            <view class="day {{monthRunDay[index] ? 'run' : ''}}"
                  @tap="navigatorToDay({{monthRunDay[index]}})">
              <text wx:if="{{index >= monthStartDate}}">{{index - monthStartDate + 1}}</text>
            </view>
          </repeat>
        </view>
      </view>
    </view>
    <noMore></noMore>
  </view>
</template>

<script>
  import wepy from 'wepy';
  import ecCanvas from '../../plugins/ec-canvas/ec-canvas';
  import * as echarts from '../../plugins/ec-canvas/echarts';
  import { geoJson } from '../../plugins/ec-canvas/china';
  import OperationSituation from '../../components/trip/operation-situation';
  import monthDay from '../../lib/month';
  import numToFixed from '../../lib/numToFixed';
  import tripService from '../../services/trip';
  import CarService from '../../services/car';
  import NoMore from '../../components/no-more';

  export default class TripMonth extends wepy.page {
    data = {
      year: 0,
      month: 0,
      operations: [
        {
          img: '../../assets/trip/oper-icon-01.png',
          title: '本月里程',
          val: 0,
          unit: 'km',
        },
        {
          img: '../../assets/trip/oper-icon-02.png',
          title: '本月时长',
          val: 0,
          unit: 'h',
        },
        {
          img: '../../assets/trip/oper-icon-03.png',
          title: '本月行驶',
          val: 0,
          unit: '天',
        },
        {
          img: '../../assets/trip/oper-icon-04.png',
          title: '运营天数',
          val: 0,
          unit: '天',
        },
        {
          img: '../../assets/trip/oper-icon-05.png',
          title: '平均速度',
          val: 0,
          unit: 'km/h',
        },
        // {
        //   img: '../../assets/trip/oper-icon-07.png',
        //   title: '车辆损耗',
        //   val: 0,
        //   unit: '%',
        // },
      ],
      days: [],
      monthRunDay: [],
      monthStartDate: 0,
      beenPlace: {
        cities: 0,
        province: 0,
        raty: 0,
      },
      citiesOrder: [],
      carId: '',
      framenum: ''
    };
    components = {
      operationSituation: OperationSituation,
      'map-chart': ecCanvas,
      noMore: NoMore
    };

    methods = {
      navigatorToDay (item) {
        if (item) {
          wepy.navigateTo({
            url: `./trip-day?y=${item.dataTime.replace(/\s.+/, '')}&carId=${this.carId}&mileage=${item.mileage}&fuelConsumption=${item.fuelConsumption}&workTimeInSeconds=${item.workTimeInSeconds}&framenum=${this.framenum}&avgVelocity=${item.avgVelocity}&maxVelocity=${item.maxVelocity}`
          });
        }
      },
      async onChartMapReady(canvas, width, height, callback) {
        // 获取经过的省份
        let city = CarService.getPortraitProvinceOrder({
          carId: this.carId
        });
        // 获取城市排行
        let order = CarService.getPortraitCityOrder({
          carId: this.carId
        });
        // 获取超过百分比
        let per = CarService.getCitiesProportion({
          carId: this.carId
        });
        let data = await Promise.all([city, order, per]);
        if (data[0].list) {
          let newList = data[0].list.sort((a, b) => {
            return b.provincecount - a.provincecount;
          }).map(ele => {
            return {
              province: ele.province,
              value: ele.provincecount
            };
          });
          this.beenPlace.province = data[0].list.length;   // 经过的省份、城市、比例
          this.$apply();
          this.chartMap = echarts.init(canvas, null, {
            width: width,
            height: height
          });
          canvas.setChart(this.chartMap);
          callback(this.chartMap);
          this.bindChartMap(newList);
        }
        if (data[1].list) {
          data[1].list.sort((a, b) => {
            return b.count - a.count;
          });
          this.beenPlace.cities = data[1].list.length;   // 经过的省份、城市、比例
          this.citiesOrder = data[1].list;   // 经过的城市
          this.$apply();
        }
        if (data[2].map) {
          this.beenPlace.raty = numToFixed(data[2].map.citiesProportion, 1);
          this.$apply();
        }
      }
    };

    onLoad(option) {
      this.year = option.y.split('-')[0];
      this.month = option.y.split('-')[1];
      wepy.setNavigationBarTitle({
        title: `${this.year}年${this.month}月行程`,
      });
      this.carId = option.carId;
      this.framenum = option.framenum;
      this.getMonthList(this.year, this.month, this.carId);
      this.operations[0].val = option.mileage || 0;
      this.operations[1].val = option.workTimeInSeconds || 0;
      this.operations[2].val = option.workDays || 0;
      this.operations[3].val = option.workDays || 0;
      this.operations[4].val = option.avgVelocity || 0;
      // this.operations[5].val = option.loss || 0;
      this.$apply();
    }

    onUnload() {
      this.$broadcast('destroy-echarts');
    }
    async getMonthList(year, month, carId) {
      this.getMonth(year, month);
      let arr = new Array(this.days + this.monthStartDate);
      let data = await tripService.getTripMonthList({
        carId,
        month: `${year}${month}`
      });
      if (data.code === 200 && data.dailyList.length) {
        data.dailyList.map(ele => {
          let index = parseInt(ele.dataTime.replace(/\s.+/, '').replace(/.+-/, ''));
          arr[index + this.monthStartDate - 1] = Object.assign(ele, {
            mileage: numToFixed(ele.mileage / 1000, 1),
            avgVelocity: numToFixed(ele.avgVelocity, 1),
            maxVelocity: numToFixed(ele.maxVelocity, 1)
          });
        });
      }
      this.monthRunDay = arr;
      this.$apply();
    }

    bindChartMap(footprint) {
      let seriesData = this.convertProvinceName(this.convertArrJsonName(footprint));
      seriesData.sort((a, b) => b.value - a.value);
      let markPointData = seriesData.slice(0, 3);
      let maxValue = seriesData[0].value;
      markPointData = markPointData.map(v => {
        v.coord = geoJson.features.find(x => x.properties.name === v.name).properties.cp;
        return v;
      });
      let option = {
        backgroundColor: '#fff',
        tooltip: {
          show: false
        },
        visualMap: {
          show: false,
          min: 0,
          max: maxValue,
          type: 'continuous',
          inRange: {
            color: ['#DAE4FF', '#4475FD']
          }
        },
        series: [{
          type: 'map',
          map: 'china',
          zoom: 1,
          itemStyle: {
            normal: {
              areaColor: '#DAE4FF',
              borderWidth: 0
            },
            emphasis: {
              areaColor: '#DAE4FF'
            }
          },
          data: seriesData,
          markPoint: {
            label: {
              show: true,
              position: 'right',
              formatter: '{b}',
              fontSize: 10,
              color: '#333333',
              padding: [2, 5],
              backgroundColor: '#fff',
              borderRadius: 8
            },
            symbol: 'circle',
            symbolSize: 6,
            itemStyle: {
              color: 'blue'
            },
            data: markPointData
          }
        }]
      };
      this.chartMap.setOption(option);
    }

    // 获取月份天数
    getMonth(year, month) {
      let {monthStartDate, days} = monthDay(year, month);
      // console.log(monthStartDate, days);
      this.monthStartDate = monthStartDate;
      this.days = days;
      this.$apply();
    }

    // 改字段名
    convertArrJsonName (json, oldName = 'province', newName = 'name') {
      let reg = new RegExp(oldName, 'ig');
      return JSON.parse(JSON.stringify(json).replace(reg, newName));
    }
    // 改省份名
    convertProvinceName (data) {
      return JSON.parse(JSON.stringify(data).replace(/[省|市|自治区|壮族自治区|回族自治区|维吾尔自治区|特别行政区]/g, ''));
    }
  }
</script>
